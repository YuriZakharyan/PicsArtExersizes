class Solution {                      //C++ solution
public:
    int myAtoi(string s) {
        int res=0;

        int sign=1;
        
        
        int i=0;    
        while(i<s.size()&&s[i]==' ')i++;
        if(s[i]=='-'||s[i]=='+')                {
            sign=s[i]=='-'?-1:1;
            i++;
        }
        while(i<s.length()&&(s[i]>='0'&&s[i]<='9')) 
        {
            int digit=(s[i]-'0')*sign;
            if(sign==1 && (res>INT_MAX/10 || (res==INT_MAX/10 && digit>INT_MAX%10))) 
                return INT_MAX; 
            if(sign==-1 &&(res<INT_MIN/10 || (res==INT_MIN/10 && digit<INT_MIN%10))) 
                return INT_MIN; 

            res=res*10+digit; 
            i++;
        }
    return res;
    }
};



public static int MyAtoi(string s)          //C# code
            {
                int res = 0;
                int digit = 0;
                int i = 0;
                int sign = 1;

                while (i < s.Length && s[i] == ' ') i++;
                if (s[i] == '-' || s[i] == '+')
                {
                    sign = s[i] == '-' ? -1 : 1;                                //positive or negative
                    i++;
                }
                while (i < s.Length && s[i] >= '0' && s[i] <= '9')
                {
                    digit = (s[i] - '0') * sign;
                    if ((sign == 1) && (res > int.MaxValue / 10 || (res == int.MaxValue / 10 && digit > int.MaxValue % 10))) 
                        return int.MaxValue;
                    if ((sign == -1) && (res < int.MinValue / 10 || (res == int.MinValue / 10 && digit < int.MinValue % 10))) 
                        return int.MinValue;
                    
                    res = res * 10 + digit;
                    i++;
                }
                return res;
            }
